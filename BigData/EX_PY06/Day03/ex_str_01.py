# ------------------------------------------------------------------
# 문자열 str 데이터 다루기
# ------------------------------------------------------------------
## 여러줄 문자열 ==> ''' ''' 또는 """ """
msg = '''
오늘은
 
좋은날
기쁜날

'''

print(msg)

## 인덱싱 : 문자열 안에 문자 한개 한개를 식별하는 방법
## - 원소/요소 : 문자열 안에 문자 1개
## - 문법 : 변수명[index], 문자열데이터[인덱스]
## - 인덱스 종류
##   * 왼 >>> 오 : 0,1,2 ... n
##   * 왼 <<< 오 : -1, -2, -3 ... -n
# ------------------------------------------------------------------
msg = "Good Luck"
msg2 = ''

print(msg)
print(msg[0])
print(msg[2])
print(msg[5])

# 원소/요소의 갯수를 파악해주는 내장함수 len()
# - 원소/요소를 가지고 있는 데이터 타입에만 사용 가능
print(len(msg))

# 제일 마지막 원소/요소만 출력
print(msg[len(msg)-1])

data = "Happy New Year 2025! Good Luck"
print(f"인덱스 범위는 : 0 ~ {len(data)-1}")
print(f"{data[15]} {data[16]} {data[17]} {data[18]} {data[19]}")
print(data[15:20])


a = "Life is too short, you need python"
# Life
print(a[0:4])
# 분수명[:끝인덱스] : 처음부터 의미

# You need Python
print(a[-15:])
# 변수명[시작인덱스:] : 끝까지 의미

# 변수명[:] : 처음부터 끝까지 의미
print(a[:])








# ------------------------------------------------------------------
## 슬라이싱 : 문자열 내에 연속된 요소/원소 추출 방법
## - 문법 : 변수명[시작:끝+1] 시작 인덱스 이상 ~ 끝 인덱스 이하
# ------------------------------------------------------------------





# ------------------------------------------------------------------
## 슬라이싱 : 문자열 내에 규칙, 패턴을 가진 요소/원소 추출 방법
## - 변수명[시작:끝+1:간격]
# ------------------------------------------------------------------
data = "123456789"

# 2,4,6,8 만 추출

print(data[1], data[3],data[5], data[7])
data[:1:2]
data[1:8:2]
data[1::2]

data="ABC1DEF2GHI3JKL4MLO5PQR6STU"
#문자열에 숫자 요소만 추출해주세요
print(data[3::4])

#





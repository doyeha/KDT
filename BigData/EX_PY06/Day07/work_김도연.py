# ------------------------------------------------------------------ 
# 0704, Day07
# 22장 ~ 20장 // 23ㅡ 24장은 x, 22 25  
# ------------------------------------------------------------------

"""
22장 ~ 320p까지
문자열은 아ㅣㅈㄱ.
"""


## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 리스트 "추가" 메서드
# 1. append : 요소 하나 추가, 맨 뒤에
# 2. extend : 리스트 확장, 없는 인덱스 지정 후 리스트 추가 시 범위 벗어났다면서 오류 발생.
# 3. insert : 특정 인덱스에 요소 추가, 중간에 끼워넣기
lis = [1,2,3]
lis.append([4,5]) # 리스트 자체를 요소로 추가
print(lis)
lis.extend([5,6]) # lis라는 리스트에 [5,6]이라는 리스트를 붙여서 5,6을 요소로 삼는다. 연장
print(lis)
lis.insert(2, "2번 인덱스 차지")
print(lis)


## 248P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 리스트 "삭제" 메서드
# 1. pop : 리스트 확장, 없는 인덱스 지정 후 리스트 추가 시 범위 벗어났다면서 오류 발생.
# 2. remove : 마지막 또는 특정 "인덱스"의 요소를 삭제
lst = [10,20,30,40]
print(lst)

lst.pop() # Default 맨 마지막 , 지정 인덱스 
print(lst)
lst.remove(10) # 특정 값 삭제, 값 중복 시 가장 앞 인덱스의 값 삭제
print(lst)

## 251P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 이외 리스트 메서드
ist = ["a","b","c","a","a"]
# 1. index() : 특정 값의 인덱스
print(ist.index("a")) # -> index 0 출력
# print(ist.index("d")) -> 없으면 오류

# 2. count() : 특정 요소의 개수 
print(ist.count("a")) 

# 3. reverse() : 순서 뒤집기
print(ist.reverse()) # -> 값이 None이 나온다.
# reverse는 새로운 리스트를 만드는게 아니라 단순히 ist를 뒤집는 것이기 때문에 ist.reverse() 자체는 None이다.
# 쟤는 메서드긴 하지만 유사 명령어라고 생각하는게 마음이 편하지 않을까?
# 그래서 line48로는 None이 나왔지만 어쨌든 reverse 했으니 print(ist) 의 결과물은 reverse된 버전이 나온다.

# 4. sort() / sort(reverse=True) : 리스트 순서 정렬 
print(ist.sort()) # 3. reverse와 마찬가지로 ist의 구성 자체를 바꾸는 것이지 새 리스트를 만드는 식이 아니라 None이 출력
print(ist.sort(reverse=True)) # ()속 기본값은 오름차순으로 되어있지만 내림차순을 사용하기 위해서는 (반대로? 네) 설정 해야한다.

# 5. clear() : 모든 요소를 삭제한다.
ist.clear()
print(ist) # 빈 리스트 출력


## 253P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
list1 = [1,2,3,4,5]
list1[2:10] = [400,200]
print(list1) # 출력 결과 : [1, 2, 400, 200]
# 범위 밖으로 슬라이싱 해도 오류 x, 내용이 수정되엇다.

## 254P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
one = [1,2,3,4,5]
two = one
                            # one으로 리스트 지정 후 two = one으로 함으로써 [1,2,3,4,5]는 one이자 two, one와 two는 동일해졌다.
two[2:] = [1,2,3,4,5]       # 그러므로 변동 시 one과 two 모두에게 적용
print(one, "와" ,two)

## 256P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
for index, i in enumerate(one):  # 원소당 번호(인덱스)를 부여해서 튜플로 묶어주는 내장함수 enumerate
    print(index, i)
# for _ in _ 에는 반복가능한 것들만 들어올 수 있다.


## 259P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 내장함수 없이 min, max 구하기
a = [38,21,53,62,19]
mini = a[0]
for i in a:
    if mini > i:
        mini = i
print(mini)

maxi = a[0]
for i in a:
    if maxi < i:
        maxi = i
print(maxi)

# 함수 사용
print(f"max : {max(a)}, min : {min(a)}, sum : {sum(a)} ")


## 261P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 리스트 컨프리핸셔
conf = [i for i in range(10)] # i로 리스트를 구성하는데? 그걸, range10중에서 하나씩 끄집어내서 넣는 식.
print(conf)
confh = list(i for i in range(11,21))
print(confh)

# 거기에 if를 섞은
ifcon = [a * b for a in range(1,11) for b in range(2,9)]
print(ifcon, len(ifcon))
# for 2개 연달아 썻는데 알아서 a랑 b 에 잘 들어가서 list 생성함.

## 264P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
tsil = [1.2, 2.4, 3.5, 1.1]
tsil = list(map(int,tsil))  # 시퀀스객체의 모든 요소들을 지정한 타입으로 변형해줌. 다만 결과값이 map이라는 유형이므로 다시 list화 해준다.
print(tsil)

## 267P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 튜플은 "수정/추가"가 절대적으로 불가능한 유형이다. 그러므로 관련 메서드도 정보 내뱉는 애들 밖에 없음.
# 1. index
# 2. count
tup = (21, 22,20, 19)
print(tup.index(21)) 

# 다만 처음 만드는 것에 관해서는 for로 요소를 지정할 수는 있지.
tupl = (i for i in range(1,50,3))
tupe = tuple(i for i in range(1,50,3))
print(tupl)
# <generator object <genexpr> at 0x0000022153588D60> 출력.
print(tupe)
# 얘는 멀쩡히 나온다. 일단 이유는 500페이지쯤은 되어야 나온다고 하니 그냥 tuple로 제대로 형식을 지정해주자.


## 269P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
""" 22.8 퀴즈
1. 리스트 a가 있을 때 다음 중 리스트 a.append(40)과 동작이 같은 것을 모두 고르세요.
 a. a.insert(len(a), 40)
 b. a[0:] = 40
 c. a[len(a):] = 40
 d. a[len(a):] = [40]
 e. a[-1:] = [40]
    My Answer : a d

    
2. 2. 다음 중 리스트의 모든 요소를 삭제하는 메서드를 고르세요.
 a. clean
 b. remove
 c. reverse
 d. pop
 e. clear
    My Answer : e

3. 다음 중 리스트 a의 모든 요소를 출력하는 방법으로 올바른 것을 모두 고르세요.
 a. for i in range(len(a)):
        print(a[i])
 b. for i in a:
        print(a[i])
 c. i = 0
    while i <= len(a):
        print(a[i])
        i += 1
 d. i = 0
    while i < len(a):
        print(a[i])
        i += 1
 e. for i in a:
        print(i)
    My Answer : a d e

4. 다음 중 튜플 a에 사용할 수 없는 코드를 고르세요.
 a. print(a[:])
 b. a.pop()
 c. sum(a)
 d. a.count(10)
 e. min(a)
    My Answer : b

5. 리스트 [0, 1, 2, 3, 17, 18, 19]를 만드는 방법으로 올바른 것을 고르세요.
 a. [i for i in range(20)]
 b. [i for i in range(30) if i < 3 or i > 17]
 c. [if i <= 3 or i >= 17 for i in range(20)]
 d. [i for i in range(20) if i <= 3 or i >= 17]
 e. [i for i if i < 3 or i > 17 in range(20)]
    My Answer : d

6. 다음 중 실수가 들어있는 리스트 [4.7, 3.5, 2.9]의 요소를 문자열로 변환하는 방법으로 올바른 것을 고르세요. a는 리스트가 되어야 합니다.
 a. a = str([4.7, 3.5, 2.9])
 b. a = map(str, [4.7, 3.5, 2.9])
 c. a = list(map(str, [4.7, 3.5, 2.9]))
 d. a = list(str, [4.7, 3.5, 2.9])
 e. a = map(int, [4.7, 3.5, 2.9])
    My Answer : c


"""
## 270P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 22.9 연습문제 | 리스트 a에 들어있는 문자열 중에서 길이가 5인 것들만 리스트 형태로 출력
a = ['alpha', 'bravo', 'charlie', 'delta', 'echo', 'foxtrot', 'golf', 'hotel', 'india']
# 실행 결과 : ['alpha', 'bravo', 'delta', 'hotel', 'india']

b = list(i for i in a if len(i)==5)
print(b)

## 271P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# 22.10 심사문제
# 정수 두 개가 입력 (첫 번째 값 1~20, 항상 << 두번째보다 작은 상태. 두 번째 값 10~30
# 첫 번째 정수부터 두 번째 정수까지를 지수로 하는 2의 거듭제곱 리스트를 출력하는 프로그램을 만드세요
# 단, 리스트의 두 번째 요소와 뒤에서 두 번째 요소는 삭제한 뒤 출력하세요. 출력 결과는 리스트 형태라야 합니다.
"""
1 10 입력하면 
2**1 2**2 이런 리스트 생성
"""
a, b = map(int,input().split())
if a > b:
    print("다시 입력해주세요.")
else:
    lis = list(2**i for i in range(a,b+1) if not i == a+1 and not i == b-1) # 2의 i제곱 수를 리스트로 삼는데, 그걸 a~b 사이의 범위에서 뽑아내겠다.
print(lis, type(lis))
    # 근데 리스트 [1], [-1]은 하면 안되네? 무슨 기준으로 ????
    # 만약, i가 a+1이나 b가 되는 순간에는 출력 x 


"""=============== 25장 ==============="""
## 313P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## 244P - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

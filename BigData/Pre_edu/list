

# 딕셔너리(dict) 자료형   // Day14
 # - 저장 데이터의 의미와 함께 데이터 저장하는 자료형
 # - 형식 : {키: 값, 키: 값, 키:값)

 ## 비교균 list => example
  jumsu = [98, 100, 79]
  jumsu[1] (값 : 98)      # 리스트에서는 원소/요소를 인덱스로 식별 
  jumsu[1] = 68       # 리스트에서는 원소/요소 값 변경
  # 리스트에서 원소/요소 추가 ==> 메서드
  # jumsu[3] = 50 , 인덱스는 존재하는 데이터에 부여하는 번호, 즉 있어야 하지 얘는 없잖아. 그래서 불가능. 메서드를 써야한다.
  
  ## 본격 딕셔너리   
   jumsu2 = {'미술':99, '음악': 100, '과학': 100}  # 키:값, 키:값
    # 딕셔너리에서는 원소/요소를 키로 식별 
    print(jumsu2['미술']) 

    # 딕셔너리에서는 원소/요소 값 변경
    jumsu2['미술'] = 87

    #del 명령어 삭제
    del jumsu2['미술']

    # 원소/요소 추가 // 존재하는 키 아니면 새롭게 추가
    jumsu2['국어'] = 100 
    jumsu2['국어'] = 40     # 이미 존재하는 키는 값 변경, 업데이트.

    # 딕셔너리 자료형 전용 함수 즉, 메서드
# -------------------------------------------------------
jumsu = {"국어":100, "수학":90, "체육":70}

# 모든 원소/요소를 출력하세요.
# 키 추출 메서드 => keys()
keys = jumsu.keys()
print(keys)

for k in keys:
    print(k, jumsu[k])


# 값 추출 메서드 => values()
values = jumsu.values()
for v in values:
    print(v)



# 키와 값 묶음으로 추출하는 메서드 => items()
# (키, 값) 튜플
items = jumsu.items()
print(items)

for i in items:
    print(i)